'use client';

import React from 'react';
import { motion } from 'framer-motion';
import {
  CodeBracketIcon,
  DevicePhoneMobileIcon,
  PaintBrushIcon,
  CloudIcon,
  CogIcon,
  ChartBarIcon
} from '@heroicons/react/24/outline';

const ServicesSection = () => {
  const services = [
    {
      icon: CodeBracketIcon,
      title: 'ุชุทููุฑ ููุงูุน ุงูููุจ',
      description: 'ุชุทููุฑ ููุงูุน ููุจ ุญุฏูุซุฉ ูุณุฑูุนุฉ ุจุงุณุชุฎุฏุงู ุฃุญุฏุซ ุงูุชูููุงุช ูุซู React ู Next.js',
      features: ['ุชุตููู ูุชุฌุงูุจ', 'ุฃุฏุงุก ุนุงูู', 'SEO ูุญุณู', 'ุฃูุงู ูุชูุฏู'],
      price: 'ูุจุฏุฃ ูู 2000 ุฑูุงู',
      popular: true
    },
    {
      icon: DevicePhoneMobileIcon,
      title: 'ุชุทููุฑ ุชุทุจููุงุช ุงูููุจุงูู',
      description: 'ุชุทุจููุงุช ููุจุงูู ุฃุตููุฉ ููุชุนุฏุฏุฉ ุงูููุตุงุช ููุธุงูู iOS ู Android',
      features: ['ุชุทุจููุงุช ุฃุตููุฉ', 'React Native', 'ูุงุฌูุฉ ุณููุฉ', 'ุชุญุฏูุซุงุช ูุณุชูุฑุฉ'],
      price: 'ูุจุฏุฃ ูู 5000 ุฑูุงู',
      popular: false
    },
    {
      icon: PaintBrushIcon,
      title: 'ุชุตููู UI/UX',
      description: 'ุชุตููู ูุงุฌูุงุช ูุณุชุฎุฏู ุฌุฐุงุจุฉ ูุชุฌุฑุจุฉ ูุณุชุฎุฏู ุงุณุชุซูุงุฆูุฉ',
      features: ['ุชุตููู ุนุตุฑู', 'ุชุฌุฑุจุฉ ุณูุณุฉ', 'ุงุฎุชุจุงุฑ ุงููุณุชุฎุฏููู', 'ููุงุฐุฌ ุชูุงุนููุฉ'],
      price: 'ูุจุฏุฃ ูู 1500 ุฑูุงู',
      popular: false
    },
    {
      icon: CloudIcon,
      title: 'ุงูุญููู ุงูุณุญุงุจูุฉ',
      description: 'ูุดุฑ ูุฅุฏุงุฑุฉ ุงูุชุทุจููุงุช ุนูู ุงูููุตุงุช ุงูุณุญุงุจูุฉ ูุน ุถูุงู ุงูุฃูุงู ูุงูุฃุฏุงุก',
      features: ['AWS/Azure', 'ูุดุฑ ุขูู', 'ูุฑุงูุจุฉ ูุณุชูุฑุฉ', 'ูุณุฎ ุงุญุชูุงุทูุฉ'],
      price: 'ูุจุฏุฃ ูู 1000 ุฑูุงู',
      popular: false
    },
    {
      icon: CogIcon,
      title: 'ุตูุงูุฉ ูุชุทููุฑ',
      description: 'ุตูุงูุฉ ุฏูุฑูุฉ ูุชุทููุฑ ูุณุชูุฑ ููููุงูุน ูุงูุชุทุจููุงุช ุงูููุฌูุฏุฉ',
      features: ['ุตูุงูุฉ ุดูุฑูุฉ', 'ุชุญุฏูุซุงุช ุฃูููุฉ', 'ุชุญุณูู ุงูุฃุฏุงุก', 'ุฏุนู ููู'],
      price: 'ูุจุฏุฃ ูู 500 ุฑูุงู/ุดูุฑ',
      popular: false
    },
    {
      icon: ChartBarIcon,
      title: 'ุงุณุชุดุงุฑุงุช ุชูููุฉ',
      description: 'ุงุณุชุดุงุฑุงุช ูุชุฎุตุตุฉ ูู ุงุฎุชูุงุฑ ุงูุชูููุงุช ุงูููุงุณุจุฉ ูุชุฎุทูุท ุงููุดุงุฑูุน',
      features: ['ุชุญููู ุงููุชุทูุจุงุช', 'ุงุฎุชูุงุฑ ุงูุชูููุงุช', 'ุชุฎุทูุท ุงููุดุฑูุน', 'ุฅุฏุงุฑุฉ ุงููุฑูู'],
      price: 'ูุจุฏุฃ ูู 300 ุฑูุงู/ุณุงุนุฉ',
      popular: false
    }
  ];

  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.1
      }
    }
  };

  const itemVariants = {
    hidden: { opacity: 0, y: 30 },
    visible: {
      opacity: 1,
      y: 0,
      transition: {
        duration: 0.6
      }
    }
  };

  return (
    <section id="services" className="py-20 bg-white dark:bg-gray-900">
      <div className="container mx-auto px-4 sm:px-6 lg:px-8">
        <div className="max-w-6xl mx-auto">
          {/* Section Header */}
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.6 }}
            className="text-center mb-16"
          >
            <h2 className="text-3xl md:text-4xl font-bold mb-4">
              ุฎุฏูุงุชู <span className="gradient-text">ุงููุชุฎุตุตุฉ</span>
            </h2>
            <p className="text-lg text-gray-600 dark:text-gray-300 max-w-2xl mx-auto">
              ุฃูุฏู ูุฌููุนุฉ ุดุงููุฉ ูู ุงูุฎุฏูุงุช ุงูุชูููุฉ ูุชูุจูุฉ ุฌููุน ุงุญุชูุงุฌุงุชู ุงูุฑูููุฉ
            </p>
          </motion.div>

          {/* Services Grid */}
          <motion.div
            variants={containerVariants}
            initial="hidden"
            whileInView="visible"
            viewport={{ once: true }}
            className="grid md:grid-cols-2 lg:grid-cols-3 gap-8"
          >
            {services.map((service, index) => (
              <motion.div
                key={service.title}
                variants={itemVariants}
                className={`relative group bg-gray-50 dark:bg-gray-800 rounded-2xl p-8 shadow-lg hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2 ${
                  service.popular ? 'ring-2 ring-blue-500 ring-opacity-50' : ''
                }`}
              >
                {/* Popular Badge */}
                {service.popular && (
                  <div className="absolute -top-4 left-1/2 transform -translate-x-1/2">
                    <div className="bg-gradient-to-r from-blue-600 to-green-400 text-white px-4 py-2 rounded-full text-sm font-medium shadow-lg">
                      ุงูุฃูุซุฑ ุทูุจุงู โญ
                    </div>
                  </div>
                )}

                {/* Service Icon */}
                <div className="w-16 h-16 bg-gradient-to-br from-blue-500 to-green-400 rounded-2xl flex items-center justify-center mb-6 group-hover:scale-110 transition-transform duration-300">
                  <service.icon className="h-8 w-8 text-white" />
                </div>

                {/* Service Title */}
                <h3 className="text-xl font-bold mb-4 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors duration-200">
                  {service.title}
                </h3>

                {/* Service Description */}
                <p className="text-gray-600 dark:text-gray-300 mb-6 leading-relaxed">
                  {service.description}
                </p>

                {/* Service Features */}
                <ul className="space-y-2 mb-6">
                  {service.features.map((feature, featureIndex) => (
                    <motion.li
                      key={featureIndex}
                      initial={{ opacity: 0, x: -20 }}
                      whileInView={{ opacity: 1, x: 0 }}
                      viewport={{ once: true }}
                      transition={{ duration: 0.4, delay: index * 0.1 + featureIndex * 0.1 }}
                      className="flex items-center space-x-3 rtl:space-x-reverse text-sm text-gray-600 dark:text-gray-300"
                    >
                      <div className="w-2 h-2 bg-gradient-to-r from-blue-500 to-green-400 rounded-full flex-shrink-0"></div>
                      <span>{feature}</span>
                    </motion.li>
                  ))}
                </ul>

                {/* Price */}
                <div className="mb-6">
                  <span className="text-2xl font-bold gradient-text">
                    {service.price}
                  </span>
                </div>

                {/* CTA Button */}
                <motion.button
                  whileHover={{ scale: 1.02 }}
                  whileTap={{ scale: 0.98 }}
                  className={`w-full py-3 px-6 rounded-lg font-medium transition-all duration-200 ${
                    service.popular
                      ? 'bg-gradient-to-r from-blue-600 to-green-400 text-white shadow-lg hover:shadow-xl'
                      : 'bg-white dark:bg-gray-700 text-gray-800 dark:text-white border-2 border-gray-200 dark:border-gray-600 hover:border-blue-500 dark:hover:border-blue-400'
                  }`}
                >
                  ุทูุจ ุงูุฎุฏูุฉ
                </motion.button>
              </motion.div>
            ))}
          </motion.div>

          {/* Process Section */}
          <motion.div
            initial={{ opacity: 0, y: 50 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.8, delay: 0.4 }}
            className="mt-20"
          >
            <div className="text-center mb-12">
              <h3 className="text-2xl md:text-3xl font-bold mb-4">
                ููู <span className="gradient-text">ุฃุนูู</span>
              </h3>
              <p className="text-gray-600 dark:text-gray-300 max-w-2xl mx-auto">
                ุนูููุฉ ูุงุถุญุฉ ูููุธูุฉ ูุถูุงู ุชุณููู ูุดุฑูุนู ูู ุงูููุช ุงููุญุฏุฏ ูุจุฃุนูู ุฌูุฏุฉ
              </p>
            </div>

            <div className="grid md:grid-cols-4 gap-8">
              {[
                { step: '01', title: 'ุงูุชุดุงูุฑ', description: 'ููุงูุดุฉ ุงููุชุทูุจุงุช ูุงูุฃูุฏุงู', icon: '๐ฌ' },
                { step: '02', title: 'ุงูุชุฎุทูุท', description: 'ูุถุน ุฎุทุฉ ููุตูุฉ ูููุดุฑูุน', icon: '๐' },
                { step: '03', title: 'ุงูุชุทููุฑ', description: 'ุชูููุฐ ุงููุดุฑูุน ุจุฃุนูู ุฌูุฏุฉ', icon: 'โก' },
                { step: '04', title: 'ุงูุชุณููู', description: 'ุชุณููู ุงููุดุฑูุน ูุงูุฏุนู ุงููุณุชูุฑ', icon: '๐' }
              ].map((process, index) => (
                <motion.div
                  key={process.step}
                  initial={{ opacity: 0, y: 30 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  viewport={{ once: true }}
                  transition={{ duration: 0.6, delay: index * 0.1 }}
                  className="text-center relative"
                >
                  {/* Connection Line */}
                  {index < 3 && (
                    <div className="hidden md:block absolute top-8 left-full w-full h-0.5 bg-gradient-to-r from-blue-500 to-green-400 opacity-30 z-0"></div>
                  )}
                  
                  <div className="relative z-10">
                    <div className="w-16 h-16 bg-gradient-to-br from-blue-500 to-green-400 rounded-full flex items-center justify-center mx-auto mb-4 text-2xl">
                      {process.icon}
                    </div>
                    <div className="text-sm font-bold text-gray-500 dark:text-gray-400 mb-2">
                      {process.step}
                    </div>
                    <h4 className="text-lg font-bold mb-2">{process.title}</h4>
                    <p className="text-sm text-gray-600 dark:text-gray-300">
                      {process.description}
                    </p>
                  </div>
                </motion.div>
              ))}
            </div>
          </motion.div>

          {/* CTA Section */}
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.6, delay: 0.6 }}
            className="mt-16 text-center bg-gradient-to-r from-blue-50 to-green-50 dark:from-blue-900/20 dark:to-green-900/20 rounded-2xl p-8"
          >
            <h3 className="text-2xl font-bold mb-4">
              ุฌุงูุฒ ูุจุฏุก ูุดุฑูุนูุ
            </h3>
            <p className="text-gray-600 dark:text-gray-300 mb-6 max-w-2xl mx-auto">
              ุชูุงุตู ูุนู ุงูููู ููุญุตูู ุนูู ุงุณุชุดุงุฑุฉ ูุฌุงููุฉ ูููุงูุดุฉ ููู ูููููู ูุณุงุนุฏุชู ูู ุชุญููู ุฃูุฏุงูู ุงูุฑูููุฉ
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <motion.button
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                className="btn-primary"
              >
                ุงุญุตู ุนูู ุงุณุชุดุงุฑุฉ ูุฌุงููุฉ
              </motion.button>
              <motion.button
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                className="btn-secondary"
              >
                ุนุฑุถ ุฃุนูุงูู ุงูุณุงุจูุฉ
              </motion.button>
            </div>
          </motion.div>
        </div>
      </div>
    </section>
  );
};

export default ServicesSection;
